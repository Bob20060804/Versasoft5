<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
<resheader name="resmimetype"><value>text/microsoft-resx</value></resheader><resheader name="version"><value>1.3</value></resheader><resheader name="reader"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><resheader name="writer"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><data name="RegionManagerWithDifferentNameException"><value>The region being added already has a name of '{0}' and cannot be added to the region manager with a different name ('{1}').</value></data>
  <data name="RegionNotInRegionManagerException"><value>The region manager does not contain the {0} region.</value></data>
  <data name="CyclicDependencyFound"><value>At least one cyclic dependency has been found in the module catalog. Cycles in the module dependencies must be avoided.</value></data>
  <data name="AdapterInvalidTypeException"><value>The object must be of type '{0}' in order to use the current region adapter.</value></data>
  <data name="CanOnlyAddTypesThatInheritIFromRegionBehavior"><value>Type '{0}' does not implement from IRegionBehavior.</value></data>
  <data name="HostControlMustBeATabControl"><value>HostControl type must be a TabControl.</value></data>
  <data name="ModuleNotFound"><value>Module {0} was not found in the catalog.</value></data>
  <data name="RegionViewNameExistsException"><value>View with name '{0}' already exists in the region.</value></data>
  <data name="IEnumeratorObsolete"><value>The IModuleEnumerator interface is no longer used and has been replaced by ModuleCatalog.</value></data>
  <data name="FailedToLoadModule"><value>An exception occurred while initializing module '{0}'. 
    - The exception message was: {2}
    - The Assembly that the module was trying to be loaded from was:{1}
    Check the InnerException property of the exception for more information. If the exception occurred while creating an object in a DI container, you can exception.GetRootException() to help locate the root cause of the problem. 
  </value></data>
  <data name="FailedToRetrieveModule"><value>Failed to load type for module {0}. 
Error was: {1}.</value></data>
  <data name="ModuleTypeNotFound"><value>Failed to load type '{0}' from assembly '{1}'.</value></data>
  <data name="DelegateCommandInvalidGenericPayloadType"><value>T for DelegateCommand&lt;T&gt; is not an object nor Nullable.</value></data>
  <data name="ValueNotFound"><value>{0} not found.</value></data>
  <data name="PropertySupport_NotMemberAccessExpression_Exception"><value>The expression is not a member access expression.</value></data>
  <data name="HostControlCannotBeNull"><value>HostControl cannot have null value when behavior attaches. </value></data>
  <data name="DefaultTextLoggerPattern"><value>{1}: {2}. Priority: {3}. Timestamp:{0:u}.</value></data>
  <data name="ConfigurationStoreCannotBeNull"><value>The ConfigurationStore cannot contain a null value. </value></data>
  <data name="RegionBehaviorRegionCannotBeSetAfterAttach"><value>The Region property cannot be set after Attach method has been called.</value></data>
  <data name="InvalidDelegateRerefenceTypeException"><value>The Target of the IDelegateReference should be of type {0}.</value></data>
  <data name="RegionBehaviorAttachCannotBeCallWithNullRegion"><value>The Attach method cannot be called when Region property is null.</value></data>
  <data name="HostControlCannotBeSetAfterAttach"><value>The HostControl property cannot be set after Attach method has been called.</value></data>
  <data name="StringCannotBeNullOrEmpty1"><value>The provided String argument {0} must not be null or empty.</value></data>
  <data name="PropertySupport_StaticExpression_Exception"><value>The referenced property is a static property.</value></data>
  <data name="FailedToGetType"><value>Unable to retrieve the module type {0} from the loaded assemblies.  You may need to specify a more fully-qualified type name.</value></data>
  <data name="NoRegionAdapterException"><value>The IRegionAdapter for the type {0} is not registered in the region adapter mappings. You can register an IRegionAdapter for this control by overriding the ConfigureRegionAdapterMappings method in the bootstrapper.</value></data>
  <data name="InvalidArgumentAssemblyUri"><value>The argument must be a valid absolute Uri to an assembly file.</value></data>
  <data name="CannotCreateNavigationTarget"><value>Cannot create navigation target '{0}'.</value></data>
  <data name="ModulePathCannotBeNullOrEmpty"><value>The ModulePath cannot contain a null value or be empty</value></data>
  <data name="DirectoryNotFound"><value>Directory {0} was not found.</value></data>
  <data name="DuplicatedModule"><value>A duplicated module with name {0} has been found by the loader.</value></data>
  <data name="DependencyForUnknownModule"><value>Cannot add dependency for unknown module {0}</value></data>
  <data name="PropertySupport_ExpressionNotProperty_Exception"><value>The member access expression does not access a property.</value></data>
  <data name="MappingExistsException"><value>Mapping with the given type is already registered: {0}.</value></data>
  <data name="UpdateRegionException"><value>An exception occurred while trying to create region objects. 
    - The most likely causing exception was: '{0}'.
    But also check the InnerExceptions for more detail or call .GetRootException(). </value></data>
  <data name="ModuleDependenciesNotMetInGroup"><value>Module {0} depends on other modules that don't belong to the same group.</value></data>
  <data name="OnViewRegisteredException"><value>An exception has occurred while trying to add a view to region '{0}'. 
    - The most likely causing exception was was: '{1}'.
    But also check the InnerExceptions for more detail or call .GetRootException(). </value></data>
  <data name="DeactiveNotPossibleException"><value>Deactivation is not possible in this type of region.</value></data>
  <data name="NavigationInProgress"><value>Navigation is already in progress on region with name '{0}'.</value></data>
  <data name="StringCannotBeNullOrEmpty"><value>The provided String argument {0} must not be null or empty.</value></data>
  <data name="NavigationServiceHasNoRegion"><value>Navigation cannot proceed until a region is set for the RegionNavigationService.</value></data>
  <data name="DependencyOnMissingModule"><value>A module declared a dependency on another module which is not declared to be loaded. Missing module(s): {0}</value></data>
  <data name="RegionCreationException"><value>An exception occurred while creating a region with name '{0}'. The exception was: {1}. </value></data>
  <data name="FailedToLoadModuleNoAssemblyInfo"><value>An exception occurred while initializing module '{0}'. 
    - The exception message was: {1}
    Check the InnerException property of the exception for more information. If the exception occurred 
    while creating an object in a DI container, you can exception.GetRootException() to help locate the 
    root cause of the problem. </value></data>
  <data name="ValueMustBeOfTypeModuleInfo"><value>The value must be of type ModuleInfo.</value></data>
  <data name="NoRetrieverCanRetrieveModule"><value>There is currently no moduleTypeLoader in the ModuleManager that can retrieve the specified module.</value></data>
  <data name="RegionViewExistsException"><value>View already exists in region.</value></data>
  <data name="DuplicatedModuleGroup"><value>A duplicated module group with name {0} has been found by the loader.</value></data>
  <data name="ViewNotInRegionException"><value>The region does not contain the specified view.</value></data>
  <data name="RegionNotFound"><value>This RegionManager does not contain a Region with the name '{0}'.</value></data>
  <data name="ContentControlHasContentException"><value>ContentControl's Content property is not empty. 
    This control is being associated with a region, but the control is already bound to something else. 
    If you did not explicitly set the control's Content property, 
    this exception may be caused by a change in the value of the inherited RegionManager attached property.</value></data>
  <data name="ItemsControlHasItemsSourceException"><value>ItemsControl's ItemsSource property is not empty. 
    This control is being associated with a region, but the control is already bound to something else. 
    If you did not explicitly set the control's ItemSource property, 
    this exception may be caused by a change in the value of the inherited RegionManager attached property.</value></data>
  <data name="DelegateCommandDelegatesCannotBeNull"><value>Neither the executeMethod nor the canExecuteMethod delegates can be null.</value></data>
  <data name="CannotChangeRegionNameException"><value>Cannot change the region name once is set. The current region name is '{0}'.</value></data>
  <data name="StartupModuleDependsOnAnOnDemandModule"><value>Module {0} is marked for automatic initialization when the application starts, but it depends on modules that are marked as OnDemand initialization. To fix this error, mark the dependency modules for InitializationMode=WhenAvailable, or remove this validation by extending the ModuleCatalog class.</value></data>
  <data name="RegionNameCannotBeEmptyException"><value>The region name cannot be null or empty.</value></data>
  <data name="RegionNameExistsException"><value>Region with the given name is already registered: {0}</value></data>
  <data name="TypeWithKeyNotRegistered"><value>No BehaviorType with key '{0}' was registered.</value></data>
  </root>